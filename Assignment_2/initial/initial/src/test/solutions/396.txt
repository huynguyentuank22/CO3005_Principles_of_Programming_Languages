Program([FuncDecl(isPalindrome,[ParDecl(n,IntType)],Id(bool),Block([VarDecl(reversed,IntType,IntLiteral(0)),VarDecl(original,IntType,Id(n)),For(BinaryOp(Id(n),>,IntLiteral(0)),Block([Assign(Id(reversed),BinaryOp(BinaryOp(Id(reversed),*,IntLiteral(10)),+,BinaryOp(Id(n),%,IntLiteral(10)))),Assign(Id(n),BinaryOp(Id(n),/,IntLiteral(10)))])),Return(BinaryOp(Id(original),==,Id(reversed)))])),FuncDecl(main,[],VoidType,Block([MethodCall(Id(fmt),Println,[FuncCall(isPalindrome,[IntLiteral(121)])])]))])